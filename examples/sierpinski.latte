lines := 40
cols  := 70
bg    := "."
pixel := "#"
point := [cols div 2, lines div 2]
steps := 4000

; Returns the midpoint of p1 and p2
function midpoint(p1, p2)
  x1 := p1@1
  y1 := p1@2
  x2 := p2@1
  y2 := p2@2

  xm := (x1 + x2) div 2
  ym := (y1 + y2) div 2

  return [xm, ym]

vertices := []
append vertices, [cols div 2, 1]
append vertices, [1, lines]
append vertices, [cols, lines]

print "Initializing screen, please wait..."
print ""
screen := []
for m from 1 to lines
  line := []
  for n from 1 to cols
    append line, bg
  append screen, line

; Printing during this loop makes it slower,
; but otherwise it might seem like LatteScript froze.
for n from 1 to steps
  vertex := vertices@random(1, 3)
  point  := midpoint(vertex, point)
  screen@(point@2)@(point@1) := pixel
  print "Step #" ~ n ~ " of " ~ steps

clear

for line in screen
  for char in line
    write char
  print ""
